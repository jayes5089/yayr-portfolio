📁 Project Structure
├── 📁 .git/
├── 📁 public/
│   └── vite.svg
├── 📁 src/
│   ├── 📁 assets/
│   │   ├── 📁 images/
│   │   │   ├── image (1).jpg
│   │   │   ├── image (10).jpg
│   │   │   ├── image (11).jpg
│   │   │   ├── image (12).jpg
│   │   │   ├── image (13).jpg
│   │   │   ├── image (14).jpg
│   │   │   ├── image (15).jpg
│   │   │   ├── image (16).jpg
│   │   │   ├── image (17).jpg
│   │   │   ├── image (18).jpg
│   │   │   ├── image (19).jpg
│   │   │   ├── image (2).jpg
│   │   │   ├── image (3).jpg
│   │   │   ├── image (4).jpg
│   │   │   ├── image (5).jpg
│   │   │   ├── image (6).jpg
│   │   │   ├── image (7).jpg
│   │   │   ├── image (8).jpg
│   │   │   └── image (9).jpg
│   │   ├── person.png
│   │   ├── photo-dates.json
│   │   └── react.svg
│   ├── 📁 components/
│   │   ├── Footer.jsx
│   │   ├── Gallery.jsx
│   │   ├── HeroSection.jsx
│   │   ├── Navbar.jsx
│   │   └── PhotoCard.jsx
│   ├── App.jsx
│   ├── index.css
│   └── main.jsx
├── 📁 tools/
│   └── extractDates.js
├── .gitignore
├── LICENSE
├── README.md
├── eslint.config.js
├── index.html
├── package-lock.json
├── package.json
├── postcss.config.js
├── project_summary.txt
├── tailwind.config.js
├── txtgen.py
└── vite.config.js

📄 File Contents

// --- eslint.config.js ---
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'

export default [
  { ignores: ['dist'] },
  {
    files: ['**/*.{js,jsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...js.configs.recommended.rules,
      ...reactHooks.configs.recommended.rules,
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
]


// --- postcss.config.js ---
export default {
  plugins: {
    "@tailwindcss/postcss": {},
    autoprefixer: {},
  },
}

// --- tailwind.config.js ---
import colors from 'tailwindcss'

/** @type {import('tailwindcss').Config} */
export default {
  darkMode: 'class', // enable class-based dark mode
  content: ['./src/**/*.{js,jsx,ts,tsx}', './public/index.html'],
  theme: {
    extend: {
      colors: {
        primary: colors.teal,
        accent: colors.indigo,
      },
    },
  },
  plugins: [],
}

// --- vite.config.js ---
import { defineConfig } from 'vite'
import tailwindcss from '@tailwindcss/postcss'
import react from '@vitejs/plugin-react-swc'

// https://vite.dev/config/
export default defineConfig({
  plugins: [
    react(),
    tailwindcss(),
  ],
})


// --- src\App.jsx ---
import React from 'react'
import HeroSection from './components/HeroSection'
import Gallery from './components/Gallery'
import Footer from './components/Footer'

export default function App() {
  return (
    <div className='flex flex-col min-h-screen bg-black text-white'>
      <HeroSection />
      <main className='flex-1 container mx-auto px-1 py-5'>
        <Gallery />
      </main>
      <Footer />
    </div>
  )
}


// --- src\index.css ---
@import "tailwindcss";

@layer utilities {
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    .animate-fadeIn {
        animation: fadeIn 0.3s ease-in-out;
    }
}

// --- src\main.jsx ---
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)


// --- src\components\Footer.jsx ---
import React from 'react'

export default function Footer() {
    return (
        <footer className='bg-black text-white border-t border-white mt-6'>
            <div className='container mx-auto py-3 text-center'>
                <p>Footer details here.</p>
            </div>
        </footer>
    )
}

// --- src\components\Gallery.jsx ---
import React, { useState, useEffect } from 'react'
import PhotoCard from './PhotoCard'
import photoDates from '../assets/photo-dates.json'

const modules = import.meta.glob('../assets/images/*.jpg', { eager: true, import: 'default' })

const photosByDate = {}

Object.entries(modules).forEach(([path, src]) => {
    const fileName = path.split('/').pop()
    const date = photoDates[fileName] || 'Unknown'
    if (!photosByDate[date]) photosByDate[date] = []
    photosByDate[date].push({ src })
})

function formatDate(dateStr) {
    if (dateStr === 'Unknown') return 'Unknown Date'
    try {
        const date = new Date(dateStr)
        return date.toLocaleDateString('en-US', {
            year: 'numeric', month: 'long', day: 'numeric'
        })
    } catch {
        return dateStr
    }
}

export default function Gallery() {
    const [selected, setSelected] = useState(null)

    useEffect(() => {
        const handleEsc = (e) => {
            if (e.key === 'Escape') setSelected(null)
        }
        document.addEventListener('keydown', handleEsc)
        return () => document.removeEventListener('keydown', handleEsc)
    }, [])

    const sortedDates = Object.keys(photosByDate).sort((a, b) => {
        if (a === 'Unknown') return 1
        if (b === 'Unknown') return -1
        return new Date(b) - new Date(a)
    })

    return (
        <section id='gallery' className='space-y-6'>
            {sortedDates.map((date) => (
                <div key={date}>
                    <h3 className='text-xl font-mono mb-2'>{formatDate(date)}</h3>
                    <div className='grid grid-cols-3 gap-2'>
                        {photosByDate[date].map((photo, idx) => (
                            <PhotoCard key={`${date}-${idx}`} photo={photo} onClick={() => setSelected(photo)} />
                        ))}
                    </div>
                </div>
            ))}
            {selected && (
                <div className='fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 backdrop-blur-sm transition-opacity animate-fadeIn'>
                    <div className='relative'>
                        <img src={selected.src} alt='Selected' className='max-h-screen' />
                        <button
                            onClick={() => setSelected(null)}
                            className='absolute top-2 right-2 text-white text-2xl'
                        >
                            &times;
                        </button>
                    </div>
                </div>
            )}
        </section>
    )
}

// --- src\components\HeroSection.jsx ---
import React, { useEffect, useState } from 'react'
import personImage from '../assets/person.png'

export default function HeroSection() {
    return (
        <section className="relative w-full h-[50vh] overflow-hidden bg-[#141414]">
            <img
                src={personImage}
                alt="Person"
                className="absolute bottom-0 left-0 h-full z-20"
            />
            <div className="fixed top-0 right-0 z-30 bg-[#141414] px-5 py-3 rounded-bl-3xl text-white space-x-6 text-lg">
                <a href="#gallery" className="hover:text-blue-400">Gallery</a>
                <a href="#about" className="hover:text-blue-400">About</a>
                <a href="#contact" className="hover:text-blue-400">Contact</a>
            </div>
        </section>
    )
}

// --- src\components\Navbar.jsx ---
import React from 'react'

export default function Navbar() {
    return (
        <nav className='bg-gray-800 shadow fixed w-full z-10'>
            <div className='container mx-auto px-4 py-4 flex justify-between items-center'>
                <a href='/' className='text-2xl font-bold'>Yayr Portfolio</a>
                <div className='space-x-4'>
                    <a href='#gallery' className='hover:text-blue-500'>Gallery</a>
                    <a href='#about' className='hover:text-blue-500'>About</a>
                    <a href='#contact' className='hover:text-blue-500'>Contact</a>
                </div>
            </div>
        </nav>
    )
}

// --- src\components\PhotoCard.jsx ---
import React from 'react'

export default function PhotoCard({ photo, onClick }) {
    return (
        <div 
            className='cursor-pointer overflow-hidden shadow-lg ring-1 ring-gray-300 hover:ring-2 hover:ring-blue-400 transition-all duration-300' 
            onClick={onClick}
            tabIndex={0}
            onKeyDown={(e) => e.key === 'Enter' && onClick()}
        >
            <img 
                src={photo.src} 
                alt={photo.title} 
                loading="lazy"
                className='object-cover w-full h-auto transform hover:scale-105 transition-transform duration-300' />
        </div>
    )
}

// --- tools\extractDates.js ---
import fs from 'fs'
import path from 'path'
import exifr from 'exifr'

const dir = './src/assets/images'
const output = {}

const files = fs.readdirSync(dir).filter(f => f.toLowerCase().endsWith('.jpg'))
console.log('Reading EXIF metadata from images...')

for (const file of files) {
    const filePath = path.join(dir, file)
    try {
        const data = await exifr.parse(filePath, ['DateTimeOriginal'])
        const date = data?.DateTimeOriginal?.toISOString().split('T')[0] || 'Unknown'
        output[file] = date
    } catch (err) {
        console.warn(`Failed to extract EXIF metadata from ${file}:`, err.message)
        output[file] = 'Unknown'
    }
}

fs.writeFileSync('./src/assets/photo-dates.json', JSON.stringify(output, null, 2))
console.log('EXIF date extraction complete: photo-dates.json')